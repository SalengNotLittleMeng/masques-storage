{"version":3,"file":"masquesStorage.umd.cjs","sources":["../src/util.js","../src/base.js","../src/session/index.js","../src/local/setTimeout.js","../src/local/index.js","../src/cache/index.js","../src/main.js"],"sourcesContent":["export function getStorageOptions(value){\n    if(typeof value =='string'){\n        try{\n            return JSON.parse(value)\n        }catch(e){void 0}\n    }\n    return value\n}","import {getStorageOptions} from './util'\nexport default class BaseStorage{\n    constructor(options={}){\n        this.storageHandler=this.creatStorageHandler(options)\n    }\n    creatStorageHandler(options){\n        return options.handler\n    }\n    get(key,isRow=false){\n        if(isRow){\n            return this.storageHandler.get(key)\n        }\n        const optionsInfo=getStorageOptions(this.storageHandler.get(key))\n        if(this.handlerGetMethods){\n            return this.handlerGetMethods(optionsInfo,key)\n        }\n        return optionsInfo&&optionsInfo.value\n    }\n    set(storageObject,options={}){\n        Object.keys(storageObject).forEach(key=>{\n            if(options.isRow){\n                this.storageHandler.set(key,JSON.stringify(storageObject[key]))\n                return\n            }\n            const decorativeObject=Object.create({})\n            decorativeObject.value=storageObject[key]\n            if(this.handlerSetMethods){\n                this.handlerSetMethods(decorativeObject,options)\n        }\n            this.storageHandler.set(key,JSON.stringify(decorativeObject))\n        })\n    }\n    delete(key){\n        this.storageHandler.delete(key)\n    }\n}","import BaseStorage from '../base'\nexport default class Session extends BaseStorage{\n    constructor(){\n        super()\n    }\n    creatStorageHandler(){\n        return {\n            get(key){\n                return sessionStorage.getItem(key)\n            },\n            set(key,value){\n                sessionStorage.setItem(key,value)\n            },\n            delete(key){\n                sessionStorage.removeItem(key)\n            }\n        }\n    }\n}","export function setTimeoutForSetter(decorativeObject,options){\n        if(!options.timeout){\n            decorativeObject.timeout=-1  \n        }else{\n            decorativeObject.timeout=new Date().getTime()+(options.timeout || 0)\n        }\n}\nexport function checkTimeoutForGetter(decorativeObject){\n    const {timeout}=decorativeObject\n    return timeout==-1?false:new Date().getTime()>timeout\n}","import BaseStorage from '../base'\nimport {checkTimeoutForGetter, setTimeoutForSetter} from './setTimeout'\nexport default class Local extends BaseStorage{\n    constructor(){\n        super()\n    }\n    creatStorageHandler(){\n        return {\n            get(key){\n                return localStorage.getItem(key)\n            },\n            set(key,value){\n                localStorage.setItem(key,value)\n            },\n            delete(key){\n                localStorage.removeItem(key)\n            }\n        }\n    }\n    handlerSetMethods(decorativeObject,options){\n        setTimeoutForSetter(decorativeObject,options)\n    }\n    handlerGetMethods(decorativeObject,key){\n        const value=decorativeObject.value\n        if(checkTimeoutForGetter(decorativeObject)){\n            this.storageHandler.delete(key)\n        }\n        return value\n    }\n}","export default class Cache {\n    constructor(options) {\n        this.options = options\n        this.cacheName = this.options.cacheName || '__masque_cache__'\n        this.cacheList = []\n        this.MapCache = null\n        this.initCache()\n        this.flush = true\n        this.bufferIndex = 0\n        this.timer = null\n    }\n    // 初始化方法，读取本地存储中的缓存并初始化Map对象\n    initCache() {\n        const initList=this.options.init()\n        if (!initList) {\n            this.cacheList = []\n            this.MapCache = new Map()\n            return\n        }\n        this.cacheList =initList\n        this.MapCache = new Map(this.cacheList.map(item => {\n            return [item.key, item.value]\n        }))\n    }\n    //添加缓存，并将最新添加的放在队列首部\n    add(key, value) {\n        // 如果数据量过大（超过100条）可以认为是中间查找的过程，无需缓存\n        try {\n            const cacheValue = this.getCacheObject(key, value)\n            this.cacheList.unshift(cacheValue)\n            this.MapCache.set(key, value)\n            this.bufferIndex++\n            this.eventBuffer()\n        } catch (e) { }\n\n    }\n    //通过定时器减少写入内存的次数,这里通过两种策略，一是设置缓冲区大小，超过大小则检查内存占用；二是通过定时器事件，保证最后总会执行写入或处理内存\n    eventBuffer() {\n        //如果缓冲区大于5，执行写入操作\n        if (this.bufferIndex > this.options.buffer) {\n            this.checkMemery()\n            this.bufferIndex = 0\n            return\n        }\n        if(!this.options.needSetTimeout){\n            return\n        }\n        //如果开启了定时器则重制\n        if (this.timer) {\n            clearTimeout(this.timer)\n        }\n        this.timer = setTimeout(() => {\n            this.bufferIndex = 0\n            this.checkMemery()\n        }, 3000)\n    }\n    //查找缓存，如果找到的话更新缓存队列，实现lru算法\n    find(key) {\n        try {\n            const result = this.MapCache.get(key)\n            if (!result) { return false }\n            this.cacheList.splice(this.cacheList.findIndex(item => item.city == city), 1)\n            this.cacheList.unshift(this.getCacheObject(key, result))\n            return result\n        } catch (e) {\n            return false\n        }\n    }\n    //创建缓存对象\n    getCacheObject(key, value) {\n        return {\n            key,value\n        }\n    }\n    //对数据进行缓存\n    cacheStorage() {\n        this.options.cacheStorage(this.cacheList)\n    }\n    //清理缓存，当数据条过大时触发清理机制，清除一般的缓存\n    clearCache() {\n        let endIndex = Math.floor(this.cacheList.length / 3) * 2\n        while (endIndex) {\n            this.MapCache.delete(this.cacheList.pop().city)\n            endIndex--\n        }\n    }\n    //检查缓存，如果缓存数据过多则触发清理机制\n    checkMemery() {\n        if (this.cacheList.length > this.options.size) {\n            this.clearCache()\n        } else {\n            this.cacheStorage()\n        }\n    }\n}\n\n// const cache = new CityCache({\n//     cacheName: '__citylist_cache__',\n//     size: 40,\n//     buffer: 5\n// })\n","import Session from './session/index'\nimport Local from './local/index'\nimport Cache from './cache/index'\nexport default function useMasquesStorage(type,options){\n    switch(type){\n        case 'session':{\n            return new Session(options)\n        }\n        case 'local':\n            return new Local(options)\n        case 'cache':\n            return new Cache(options)\n        default:\n            return new Local(options)\n    }\n}"],"names":["getStorageOptions","value","BaseStorage","options","key","isRow","optionsInfo","storageObject","decorativeObject","Session","setTimeoutForSetter","checkTimeoutForGetter","timeout","Local","Cache","initList","item","cacheValue","result","endIndex","useMasquesStorage","type"],"mappings":"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"}